import { e as createStaticVNode } from "./app.fee4c13d.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="dart" tabindex="-1"><a class="header-anchor" href="#dart" aria-hidden="true">#</a> Dart</h1><p>\u5982\u679C\u4F60\u5DF2\u7ECF\u642D\u5EFA\u597D\u73AF\u5883\uFF1A</p><p>\u6211\u4EEC\u4E00\u5207\u5B66\u4E60\u5F00\u59CB\u4E8E\u4E00\u4E2A\u5165\u53E3\u65B9\u6CD5\uFF1A\u4E0D\u7528\u6DF1\u7A76\uFF0C\u5B83\u5C31\u662F\u8FD9\u6837\u5F00\u59CB\u7684\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u7ED3\u675F\u8BED\u53E5\u5FC5\u987B\u8981\u5206\u53F7</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/*\u53E6\u4E00\u79CD\u5199\u6CD5*/</span>\n<span class="token comment">/* viod \uFF1A\u6DFB\u52A0void\u65F6\u6CA1\u6709\u8FD4\u56DE\u503C*/</span> \n<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u53D8\u91CF\u548C\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u548C\u5E38\u91CF" aria-hidden="true">#</a> \u53D8\u91CF\u548C\u5E38\u91CF</h2><p>\u53D8\u91CF\u662F\u4E00\u4E2A\u5F15\u7528\uFF0C\u6839\u636EDart\u4E2D\u201C\u4E07\u7269\u7686\u5BF9\u8C61\u201D\u539F\u5219\uFF0C\u5373\u53D8\u91CF\u5B58\u50A8\u7684\u90FD\u662F\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u6216\u8005\u8BF4\u5B83\u4EEC\u90FD\u662F\u6307\u5411\u5BF9\u8C61.</p><p>dart\u662F\u4E00\u4E2A\u5F3A\u5927\u7684\u811A\u672C\u7C7B\u8BED\u8A00\uFF0C\u53EF\u4EE5\u4E0D\u9884\u5148\u5B9A\u4E49\u53D8\u91CF\u7C7B\u578B \uFF0C\u81EA\u52A8\u4F1A\u7C7B\u578B\u63A8\u5012\uFF1B</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">//\u901A\u8FC7var\u5B9A\u4E49\u53D8\u91CF</span>\n<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">//\u901A\u8FC7\u7C7B\u578B\u6765\u7533\u660E\u53D8\u91CF</span>\n<span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&#39;\u4F60\u597D\u5440&#39;</span>\n\n<span class="token comment">//\u9519\u8BEF\u5199\u6CD5</span>\n<span class="token comment">//var a int = 5;\u62A5\u9519\u2014\u2014var\u540E\u5C31\u4E0D\u8981\u5199\u7C7B\u578B \uFF0C \u5199\u4E86\u7C7B\u578B \u4E0D\u8981var</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6CE8\u610F\u547D\u540D\u89C4\u5219\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> str1<span class="token operator">=</span><span class="token string">&#39;2134214&#39;</span><span class="token punctuation">;</span>   <span class="token comment">//\u6B63\u786E</span>\n\n\n\n<span class="token keyword">var</span> <span class="token number">2</span>str<span class="token operator">=</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">;</span>  <span class="token comment">//\u9519\u8BEF   \u6CE8\u610F\uFF1Adart\u53D8\u91CF\u6807\u8BC6\u7B26\u5F00\u5934\u4E0D\u80FD\u662F\u6570\u5B57</span>\n\n\n  \n<span class="token keyword">var</span> <span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&#39;124214&#39;</span><span class="token punctuation">;</span> <span class="token comment">//\u9519\u8BEF   \u6CE8\u610F:\u6807\u8BC6\u7B26\u4E0D\u80FD\u662F\u4FDD\u7559\u5B57\u548C\u5173\u952E\u5B57\u3002  </span>\n\n\n<span class="token comment">//\u53D8\u91CF\u7684\u540D\u5B57\u662F\u533A\u5206\u5927\u5C0F\u5199\u7684\u5982: age\u548CAge\u662F\u4E0D\u540C\u7684\u53D8\u91CF\u3002\u5728\u5B9E\u9645\u7684\u8FD0\u7528\u4E2D,\u4E5F\u5EFA\u8BAE,\u4E0D\u8981\u7528\u4E00\u4E2A\u5355\u8BCD\u5927\u5C0F\u5199\u533A\u5206\u4E24\u4E2A\u53D8\u91CF\u3002</span>\n<span class="token keyword">var</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>  \n\n<span class="token keyword">var</span> <span class="token class-name">Age</span><span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">//\u6807\u8BC6\u7B26(\u53D8\u91CF\u540D\u79F0)\u4E00\u5B9A\u8981\u89C1\u540D\u601D\u610F \uFF1A\u53D8\u91CF\u540D\u79F0\u5EFA\u8BAE\u7528\u540D\u8BCD\uFF0C\u65B9\u6CD5\u540D\u79F0\u5EFA\u8BAE\u7528\u52A8\u8BCD </span>\n\n<span class="token keyword">var</span> username<span class="token operator">=</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> price<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u6240\u8C13\u5E38\u91CF\uFF0C\u5C31\u662F\u6C38\u8FDC\u4E0D\u6539\u7684\u91CF;\u4E3B\u8981\u662F\u4E0B\u9762\u4E24\u8005\uFF1A</p><ul><li><p><code>const</code>\u503C\u4E0D\u53D8 \u4E00\u5F00\u59CB\u5C31\u5F97\u8D4B\u503C</p></li><li><p><code>final</code> \u53EF\u4EE5\u5F00\u59CB\u4E0D\u8D4B\u503C \u53EA\u80FD\u8D4B\u4E00\u6B21 ; \u800C<code>final</code>\u4E0D\u4EC5\u6709<code>const</code>\u7684\u7F16\u8BD1\u65F6\u5E38\u91CF\u7684\u7279\u6027\uFF0C\u6700\u91CD\u8981\u7684\u5B83\u662F\u8FD0\u884C\u65F6\u5E38\u91CF\uFF0C\u5E76\u4E14<code>final</code>\u662F\u60F0\u6027\u521D\u59CB\u5316\uFF0C\u5373\u5728\u8FD0\u884C\u65F6\u7B2C\u4E00\u6B21\u4F7F\u7528\u524D\u624D\u521D\u59CB\u5316;</p></li></ul><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">const</span> PI<span class="token operator">=</span><span class="token number">3.14159</span><span class="token punctuation">;</span>\nPI<span class="token operator">=</span><span class="token number">123.1243</span><span class="token punctuation">;</span> <span class="token comment">//\u9519\u8BEF\u7684\u5199\u6CD5 \u5E38\u91CF\u4E0D\u53EF\u4EE5\u4FEE\u6539</span>\n<span class="token function">print</span><span class="token punctuation">(</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">final</span> a<span class="token punctuation">;</span><span class="token comment">//\u60F0\u6027\u521D\u59CB\u5316</span>\na <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u6B63\u786E</span>\n<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//2021-06-30 14:52:55.615161</span>\n\n<span class="token keyword">const</span> a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//\u9519\u8BEF</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h2><ol><li>\u6570\u5B57(number)</li><li>\u5B57\u7B26\u4E32(string)</li><li>\u5E03\u5C14\u503C(boolean)</li><li>\u5217\u8868(list)</li><li>\u96C6\u5408(set)</li><li>\u6620\u5C04(map)</li><li>\u7B26\u6587(rune)</li><li>\u7B26\u53F7(Symbol)</li></ol><h4 id="_1-\u6570\u5B57\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-\u6570\u5B57\u7C7B\u578B" aria-hidden="true">#</a> 1.\u6570\u5B57\u7C7B\u578B</h4><p>number\u5305\u542B\u4E86\u4E24\u79CD\u7C7B\u578B\uFF1Bint(\u6574\u6570)\u548Cdouble(\u6D6E\u70B9\u6587\u5B57)</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>int z <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>\ndouble z <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// \u76F8\u5F53\u4E8E double z = 10.0</span>\n\n<span class="token comment">//\u8FD0\u7B97\u7B26\uFF1A+ - * / %</span>\n\n<span class="token comment">//\u7C7B\u578B\u8F6C\u6362\uFF0C\u4EE5\u4E0B\u662F\u5C06\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u6570\u5B57\u7684\u65B9\u6CD5\uFF0C\u53CD\u4E4B\u4EA6\u7136\uFF1A</span>\n\n<span class="token comment">// String \u8F6C\u4E3A int</span>\n<span class="token keyword">var</span> one <span class="token operator">=</span> int<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span>one <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// String \u8F6C\u4E3A double</span>\n<span class="token keyword">var</span> onePointOne <span class="token operator">=</span> double<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;1.1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span>onePointOne <span class="token operator">==</span> <span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// int \u8F6C\u4E3A String</span>\n<span class="token class-name">String</span> oneAsString <span class="token operator">=</span> <span class="token number">1.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span>oneAsString <span class="token operator">==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// double \u8F6C\u4E3A String</span>\n<span class="token class-name">String</span> piAsString <span class="token operator">=</span> <span class="token number">3.14159</span><span class="token punctuation">.</span><span class="token function">toStringAsFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span>piAsString <span class="token operator">==</span> <span class="token string">&#39;3.14&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>int\u7C7B\u578B\u6307\u5B9A\u4F20\u7EDF\u7684\u6309\u4F4D\u79FB\u4F4D(&lt;&lt;\uFF0C&gt;&gt;)\uFF0CAND(&amp;)\u548COR(|)\u8FD0\u7B97\u7B26\u3002\u4F8B\u5982\uFF1A</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0011 &lt;&lt; 1 == 0110</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0011 &gt;&gt; 1 == 0001</span>\n<span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">|</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0011 | 0100 == 0111</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h4><p>Dart\u5B57\u7B26\u4E32\u662F\u4E00\u7CFB\u5217UTF-16\u4EE3\u7801\u5355\u5143\u3002\u7B26\u6587\u7528\u4E8E\u8868\u793AUTF-32\u4EE3\u7801\u5355\u5143\u5E8F\u5217\u3002</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> str1<span class="token operator">=</span><span class="token string">&#39;this is str1&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> str2<span class="token operator">=</span><span class="token string">&quot;this is str2&quot;</span><span class="token punctuation">;</span>\n\n<span class="token comment">//\u591A\u884C\u6587\u672C</span>\n<span class="token class-name">String</span> str1<span class="token operator">=</span><span class="token string">&#39;&#39;&#39;\n              this is str1\n  		      this is str1\n 	 	      this is str1\n  &#39;&#39;&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">//\u53EF\u4EE5\u4F7F\u7528\u76F8\u90BB\u7684\u5B57\u7B26\u4E32\u6587\u5B57\u6216+\u8FD0\u7B97\u7B26\u6765\u8FDE\u63A5\u5B57\u7B26\u4E32\uFF1A</span>\n<span class="token function">print</span><span class="token punctuation">(</span>str1<span class="token operator">+</span>str2<span class="token punctuation">)</span>\n<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;$str1 $str2&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="\u5E03\u5C14\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C14\u7C7B\u578B" aria-hidden="true">#</a> \u5E03\u5C14\u7C7B\u578B</h4><p>\u53EA\u6709\u4E24\u4E2A\u5BF9\u8C61\u5177\u6709bool\u7C7B\u578B\uFF1A<code>true</code>\u548C<code>false</code>\uFF0C\u5B83\u4EEC\u90FD\u662F\u7F16\u8BD1\u65F6\u5E38\u91CF\u3002\u7C7B\u578B\u5B89\u5168\u9700\u8981\u660E\u786E\u68C0\u67E5\u503C</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">//\u5B9A\u4E49</span>\nbool flag1<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token function">print</span><span class="token punctuation">(</span>flag1<span class="token punctuation">)</span>\n\n<span class="token comment">//\u660E\u786E\u5224\u65AD</span>\n<span class="token keyword">var</span> flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u771F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&#39;\u5047&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>', 26);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var _02_Dart___html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _02_Dart___html as default };
