import { r as resolveComponent, o as openBlock, c as createElementBlock, b as createBaseVNode, a as createVNode, F as Fragment, f as createStaticVNode, d as createTextVNode } from "./app.95ef767b.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="\u53D8\u91CF\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u58F0\u660E" aria-hidden="true">#</a> \u53D8\u91CF\u58F0\u660E</h1><p>\u76EE\u6807\uFF1A</p><p>\u4E86\u89E3 let const var \u7684\u533A\u522B</p><h2 id="var\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#var\u58F0\u660E" aria-hidden="true">#</a> var\u58F0\u660E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token comment">// \u5728\u51FD\u6570\u91CC\u5B9A\u4E49</span>\n<span class="token comment">// \u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728\u5176\u5B83\u51FD\u6570\u5185\u90E8\u8BBF\u95EE\u76F8\u540C\u7684\u53D8\u91CF</span>\n<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> b<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns 11;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="\u4F5C\u7528\u57DF\u89C4\u5219-\u91CD\u8981" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF\u89C4\u5219-\u91CD\u8981" aria-hidden="true">#</a> \u4F5C\u7528\u57DF\u89C4\u5219(\u91CD\u8981)</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">shouldInitialize<span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldInitialize<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">f</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// returns &#39;10&#39;</span>\n<span class="token function">f</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns &#39;undefined&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u53D8\u91CF x\u662F\u5B9A\u4E49\u5728<em>if\u8BED\u53E5\u91CC\u9762</em>\uFF0C\u4F46\u662F\u6211\u4EEC\u5374\u53EF\u4EE5\u5728\u8BED\u53E5\u7684\u5916\u9762\u8BBF\u95EE\u5B83\u3002 \u8FD9\u662F\u56E0\u4E3A var\u58F0\u660E\u53EF\u4EE5\u5728\u5305\u542B\u5B83\u7684\u51FD\u6570\uFF0C\u6A21\u5757\uFF0C\u547D\u540D\u7A7A\u95F4\u6216\u5168\u5C40\u4F5C\u7528\u57DF\u5185\u90E8\u4EFB\u4F55\u4F4D\u7F6E\u88AB\u8BBF\u95EE,\u6709\u4E9B\u4EBA\u79F0\u6B64\u4E3A* var\u4F5C\u7528\u57DF\u6216\u51FD\u6570\u4F5C\u7528\u57DF*\u3002 \u51FD\u6570\u53C2\u6570\u4E5F\u4F7F\u7528\u51FD\u6570\u4F5C\u7528\u57DF\u3002</p><p>\u4F46\u6709\u65F6\u5019\u4F1A\u5F15\u53D1\u4E00\u4E9B\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5176\u4E2D\u4E4B\u4E00\u5C31\u662F\uFF0C\u591A\u6B21\u58F0\u660E\u540C\u4E00\u4E2A\u53D8\u91CF\u5E76\u4E0D\u4F1A\u62A5\u9519\uFF1A</span>\n<span class="token keyword">function</span> <span class="token function">sumMatrix</span><span class="token punctuation">(</span><span class="token parameter">matrix<span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> currentRow <span class="token operator">=</span> matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentRow<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            sum <span class="token operator">+=</span> currentRow<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u91CC\u5F88\u5BB9\u6613\u770B\u51FA\u4E00\u4E9B\u95EE\u9898\uFF0C\u91CC\u5C42\u7684for\u5FAA\u73AF\u4F1A\u8986\u76D6\u53D8\u91CFi\uFF0C\u56E0\u4E3A\u6240\u6709i\u90FD\u5F15\u7528\u76F8\u540C\u7684\u51FD\u6570\u4F5C\u7528\u57DF\u5185\u7684\u53D8\u91CF\u3002</p><h4 id="\u6355\u83B7\u53D8\u91CF\u602A\u5F02\u4E4B\u5904" tabindex="-1"><a class="header-anchor" href="#\u6355\u83B7\u53D8\u91CF\u602A\u5F02\u4E4B\u5904" aria-hidden="true">#</a> \u6355\u83B7\u53D8\u91CF\u602A\u5F02\u4E4B\u5904</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>setTimeout\u4F1A\u5728\u82E5\u5E72\u6BEB\u79D2\u7684\u5EF6\u65F6\u540E\u6267\u884C\u4E00\u4E2A\u51FD\u6570\uFF08\u7B49\u5F85\u5176\u5B83\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\uFF09\u3002</p></blockquote><p>\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4F60\u9884\u60F3\u7684\u662F\u4E0D\u662F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0</span>\n<span class="token number">1</span>\n<span class="token number">2</span>\n<span class="token number">3</span>\n<span class="token number">4</span>\n<span class="token number">5</span>\n<span class="token number">6</span>\n<span class="token number">7</span>\n<span class="token number">8</span>\n<span class="token number">9</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>\u6211\u4EEC\u4F20\u7ED9setTimeout\u7684\u6BCF\u4E00\u4E2A\u51FD\u6570\u8868\u8FBE\u5F0F\u5B9E\u9645\u4E0A\u90FD\u5F15\u7528\u4E86\u76F8\u540C\u4F5C\u7528\u57DF\u91CC\u7684\u540C\u4E00\u4E2Ai\u3002</p></blockquote><p>\u8FD9\u662F\u4E3A\u4EC0\u4E48\u3002 <code>setTimeout</code>\u5728\u82E5\u5E72\u6BEB\u79D2\u540E\u6267\u884C\u4E00\u4E2A\u51FD\u6570\uFF0C\u5E76\u4E14\u662F\u5728<code>for</code>\u5FAA\u73AF\u7ED3\u675F\u540E\u3002 <code>for</code>\u5FAA\u73AF\u7ED3\u675F\u540E\uFF0C<code>i</code>\u7684\u503C\u4E3A<code>10</code>\u3002 \u6240\u4EE5\u5F53\u51FD\u6570\u88AB\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u5B83\u4F1A\u6253\u5370\u51FA <code>10</code>\uFF01</p><p>\u4EE5\u524D\u7684\u89E3\u51B3\u529E\u6CD5\uFF1A</p><p>\u4E00\u4E2A\u901A\u5E38\u7684\u89E3\u51B3\u65B9\u6CD5\u662F\u4F7F\u7528\u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\uFF08IIFE\uFF09\u6765\u6355\u83B7\u6BCF\u6B21\u8FED\u4EE3\u65F6i\u7684\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// capture the current state of &#39;i&#39;</span>\n    <span class="token comment">// by invoking a function with its current value</span>\n    <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="let-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#let-\u58F0\u660E" aria-hidden="true">#</a> let \u58F0\u660E</h2><p>\u58F0\u660E\u65B9\u5F0F\u548Cvar\u662F\u4E00\u6837\u7684\uFF0C\u4E3B\u8981\u4E0D\u540C\u5728\u540E\u9762\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> hello <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="\u5757\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u5757\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u5757\u4F5C\u7528\u57DF</h4><p>\u7528let\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5B83\u4F7F\u7528\u7684\u662F\u8BCD\u6CD5\u4F5C\u7528\u57DF\u6216\u5757\u4F5C\u7528\u57DF\u3002 \u4E0D\u540C\u4E8E\u4F7F\u7528 var\u58F0\u660E\u7684\u53D8\u91CF\u90A3\u6837\u53EF\u4EE5\u5728\u5305\u542B\u5B83\u4EEC\u7684\u51FD\u6570\u5916\u8BBF\u95EE\uFF0C\u5757\u4F5C\u7528\u57DF\u53D8\u91CF\u5728\u5305\u542B\u5B83\u4EEC\u7684\u5757\u6216for\u5FAA\u73AF\u4E4B\u5916\u662F\u4E0D\u80FD\u8BBF\u95EE\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>input<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// Still okay to reference &#39;a&#39;</span>\n        <span class="token keyword">let</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> b<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// Error: &#39;b&#39; doesn&#39;t exist here</span>\n    <span class="token keyword">return</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u5B9A\u4E49\u4E862\u4E2A\u53D8\u91CFa\u548Cb\u3002 a\u7684\u4F5C\u7528\u57DF\u662Ff\u51FD\u6570\u4F53\u5185\uFF0C\u800Cb\u7684\u4F5C\u7528\u57DF\u662Fif\u8BED\u53E5\u5757\u91CC\u3002</p><p>\u62E5\u6709\u5757\u7EA7\u4F5C\u7528\u57DF\u7684\u53D8\u91CF\u7684\u53E6\u4E00\u4E2A\u7279\u70B9\u662F\uFF0C\u5B83\u4EEC\u4E0D\u80FD\u5728\u88AB\u58F0\u660E\u4E4B\u524D\u8BFB\u6216\u5199\u3002 \u867D\u7136\u8FD9\u4E9B\u53D8\u91CF\u59CB\u7EC8\u201C\u5B58\u5728\u201D\u4E8E\u5B83\u4EEC\u7684\u4F5C\u7528\u57DF\u91CC\uFF0C\u4F46\u5728\u76F4\u5230\u58F0\u660E\u5B83\u7684\u4EE3\u7801\u4E4B\u524D\u7684\u533A\u57DF\u90FD\u5C5E\u4E8E \u6682\u65F6\u6027\u6B7B\u533A\u3002 \u5B83\u53EA\u662F\u7528\u6765\u8BF4\u660E\u6211\u4EEC\u4E0D\u80FD\u5728 let\u8BED\u53E5\u4E4B\u524D\u8BBF\u95EE\u5B83\u4EEC\uFF0CTypeScript\u53EF\u4EE5\u544A\u8BC9\u6211\u4EEC\u8FD9\u4E9B\u9519\u8BEF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>a<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// illegal to use &#39;a&#39; before it&#39;s declared;</span>\n<span class="token keyword">let</span> a<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CE8\u610F\u4E00\u70B9\uFF0C\u6211\u4EEC\u4ECD\u7136\u53EF\u4EE5\u5728\u4E00\u4E2A\u62E5\u6709\u5757\u4F5C\u7528\u57DF\u53D8\u91CF\u88AB\u58F0\u660E\u524D\u83B7\u53D6\u5B83\u3002 \u53EA\u662F\u6211\u4EEC\u4E0D\u80FD\u5728\u53D8\u91CF\u58F0\u660E\u524D\u53BB\u8C03\u7528\u90A3\u4E2A\u51FD\u6570\u3002 \u5982\u679C\u751F\u6210\u4EE3\u7801\u76EE\u6807\u4E3AES2015\uFF0C\u73B0\u4EE3\u7684\u8FD0\u884C\u65F6\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF1B\u4F46\u73B0\u4ECATypeScript\u8FD8\u4E0D\u4F1A\u62A5\u9519\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// okay to capture &#39;a&#39;</span>\n    <span class="token keyword">return</span> a<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// \u4E0D\u80FD\u5728&#39;a&#39;\u88AB\u58F0\u660E\u524D\u8C03\u7528&#39;foo&#39;</span>\n<span class="token comment">// \u8FD0\u884C\u65F6\u5E94\u8BE5\u629B\u51FA\u9519\u8BEF</span>\n<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">let</span> a<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>', 34);
const _hoisted_35 = /* @__PURE__ */ createTextVNode("\u5173\u4E8E\u6682\u65F6\u6027\u6B7B\u533A\u7684\u66F4\u591A\u4FE1\u606F\uFF0C\u67E5\u770B\u8FD9\u91CC");
const _hoisted_36 = {
  href: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone_and_errors_with_let",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_37 = /* @__PURE__ */ createTextVNode("Mozilla Developer Network");
const _hoisted_38 = /* @__PURE__ */ createTextVNode(".");
const _hoisted_39 = /* @__PURE__ */ createStaticVNode('<h4 id="\u91CD\u5B9A\u4E49\u53CA\u5C4F\u853D" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5B9A\u4E49\u53CA\u5C4F\u853D" aria-hidden="true">#</a> \u91CD\u5B9A\u4E49\u53CA\u5C4F\u853D</h4><p>\u6211\u4EEC\u63D0\u8FC7\u4F7F\u7528<code>var</code>\u58F0\u660E\u65F6\uFF0C\u5B83\u4E0D\u5728\u4E4E\u4F60\u58F0\u660E\u591A\u5C11\u6B21\uFF1B\u4F60\u53EA\u4F1A\u5F97\u52301\u4E2A\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> x<span class="token punctuation">;</span>\n    <span class="token keyword">var</span> x<span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> x<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u91CC\uFF0C\u6240\u6709x\u7684\u58F0\u660E\u5B9E\u9645\u4E0A\u90FD\u5F15\u7528\u4E00\u4E2A\u76F8\u540C\u7684x\uFF0C\u5E76\u4E14\u8FD9\u662F\u5B8C\u5168\u6709\u6548\u7684\u4EE3\u7801\u3002 \u8FD9\u7ECF\u5E38\u4F1A\u6210\u4E3Abug\u7684\u6765\u6E90\u3002 \u597D\u7684\u662F\uFF0C let\u58F0\u660E\u5C31\u4E0D\u4F1A\u8FD9\u4E48\u5BBD\u677E\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// \u9519\u8BEF\uFF0C\u4E0D\u80FD\u57281\u4E2A\u4F5C\u7528\u57DF\u91CC\u591A\u6B21\u58F0\u660E`x`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5E76\u4E0D\u662F\u8BF4\u5757\u7EA7\u4F5C\u7528\u57DF\u53D8\u91CF\u4E0D\u80FD\u7528\u51FD\u6570\u4F5C\u7528\u57DF\u53D8\u91CF\u6765\u58F0\u660E\u3002 \u800C\u662F\u5757\u7EA7\u4F5C\u7528\u57DF\u53D8\u91CF\u9700\u8981\u5728\u660E\u663E\u4E0D\u540C\u7684\u5757\u91CC\u58F0\u660E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">condition<span class="token punctuation">,</span> x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">f</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// returns 0</span>\n<span class="token function">f</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// returns 100</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5F53let\u58F0\u660E\u51FA\u73B0\u5728\u5FAA\u73AF\u4F53\u91CC\u65F6\u62E5\u6709\u5B8C\u5168\u4E0D\u540C\u7684\u884C\u4E3A\u3002 \u4E0D\u4EC5\u662F\u5728\u5FAA\u73AF\u91CC\u5F15\u5165\u4E86\u4E00\u4E2A\u65B0\u7684\u53D8\u91CF\u73AF\u5883\uFF0C\u800C\u662F\u9488\u5BF9 \u6BCF\u6B21\u8FED\u4EE3\u90FD\u4F1A\u521B\u5EFA\u8FD9\u6837\u4E00\u4E2A\u65B0\u4F5C\u7528\u57DF\u3002 \u8FD9\u5C31\u662F\u6211\u4EEC\u5728\u4F7F\u7528\u7ACB\u5373\u6267\u884C\u7684\u51FD\u6570\u8868\u8FBE\u5F0F\u65F6\u505A\u7684\u4E8B\uFF0C\u6240\u4EE5\u5728 setTimeout\u4F8B\u5B50\u91CC\u6211\u4EEC\u4EC5\u4F7F\u7528let\u58F0\u660E\u5C31\u53EF\u4EE5\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">0</span>\n<span class="token number">1</span>\n<span class="token number">2</span>\n<span class="token number">3</span>\n<span class="token number">4</span>\n<span class="token number">5</span>\n<span class="token number">6</span>\n<span class="token number">7</span>\n<span class="token number">8</span>\n<span class="token number">9</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="const-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#const-\u58F0\u660E" aria-hidden="true">#</a> const \u58F0\u660E</h2><p>\u5B83\u4EEC\u4E0Elet\u58F0\u660E\u76F8\u4F3C\uFF0C\u4F46\u662F\u5C31\u50CF\u5B83\u7684\u540D\u5B57\u6240\u8868\u8FBE\u7684\uFF0C\u5B83\u4EEC\u88AB\u8D4B\u503C\u540E\u4E0D\u80FD\u518D\u6539\u53D8\u3002 \u6362\u53E5\u8BDD\u8BF4\uFF0C\u5B83\u4EEC\u62E5\u6709\u4E0E let\u76F8\u540C\u7684\u4F5C\u7528\u57DF\u89C4\u5219\uFF0C\u4F46\u662F\u4E0D\u80FD\u5BF9\u5B83\u4EEC\u91CD\u65B0\u8D4B\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> numLivesForCat <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> kitty <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;Aurora&quot;</span><span class="token punctuation">,</span>\n    numLives<span class="token operator">:</span> numLivesForCat<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Error</span>\nkitty <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&quot;Danielle&quot;</span><span class="token punctuation">,</span>\n    numLives<span class="token operator">:</span> numLivesForCat\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// all &quot;okay&quot;</span>\nkitty<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Rory&quot;</span><span class="token punctuation">;</span>\nkitty<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Kitty&quot;</span><span class="token punctuation">;</span>\nkitty<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Cat&quot;</span><span class="token punctuation">;</span>\nkitty<span class="token punctuation">.</span>numLives<span class="token operator">--</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u9664\u975E\u4F60\u4F7F\u7528\u7279\u6B8A\u7684\u65B9\u6CD5\u53BB\u907F\u514D\uFF0C\u5B9E\u9645\u4E0Aconst\u53D8\u91CF\u7684\u5185\u90E8\u72B6\u6001\u662F\u53EF\u4FEE\u6539\u7684\u3002 \u5E78\u8FD0\u7684\u662F\uFF0CTypeScript\u5141\u8BB8\u4F60\u5C06\u5BF9\u8C61\u7684\u6210\u5458\u8BBE\u7F6E\u6210\u53EA\u8BFB\u7684\u3002 \u63A5\u53E3\u4E00\u7AE0\u6709\u8BE6\u7EC6\u8BF4\u660E\u3002</p><h4 id="let-vs-const" tabindex="-1"><a class="header-anchor" href="#let-vs-const" aria-hidden="true">#</a> let vs const</h4><p>\u4F7F\u7528\u6700\u5C0F\u7279\u6743\u539F\u5219\uFF0C\u6240\u6709\u53D8\u91CF\u9664\u4E86\u4F60\u8BA1\u5212\u53BB\u4FEE\u6539\u7684\u90FD\u5E94\u8BE5\u4F7F\u7528const\u3002 \u57FA\u672C\u539F\u5219\u5C31\u662F\u5982\u679C\u4E00\u4E2A\u53D8\u91CF\u4E0D\u9700\u8981\u5BF9\u5B83\u5199\u5165\uFF0C\u90A3\u4E48\u5176\u5B83\u4F7F\u7528\u8FD9\u4E9B\u4EE3\u7801\u7684\u4EBA\u4E5F\u4E0D\u80FD\u591F\u5199\u5165\u5B83\u4EEC\uFF0C\u5E76\u4E14\u8981\u601D\u8003\u4E3A\u4EC0\u4E48\u4F1A\u9700\u8981\u5BF9\u8FD9\u4E9B\u53D8\u91CF\u91CD\u65B0\u8D4B\u503C\u3002 \u4F7F\u7528 const\u4E5F\u53EF\u4EE5\u8BA9\u6211\u4EEC\u66F4\u5BB9\u6613\u7684\u63A8\u6D4B\u6570\u636E\u7684\u6D41\u52A8\u3002</p>', 16);
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  const _component_MyTemplate = resolveComponent("MyTemplate");
  return openBlock(), createElementBlock(Fragment, null, [
    _hoisted_1,
    createBaseVNode("p", null, [
      _hoisted_35,
      createBaseVNode("a", _hoisted_36, [
        _hoisted_37,
        createVNode(_component_ExternalLinkIcon)
      ]),
      _hoisted_38
    ]),
    _hoisted_39,
    createVNode(_component_MyTemplate)
  ], 64);
}
var _02______html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _02______html as default };
